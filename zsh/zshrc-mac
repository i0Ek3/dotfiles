
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="random"
#ZSH_THEME="powerlevel9k/powerlevel9k

#POWERLEVEL9K_MODE="nerdfont-complete"
# Customise the Powerlevel9k prompts
#POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(ssh dir vcs newline status)
#POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon dir vcs status)
#POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()
#POWERLEVEL9K_PROMPT_ADD_NEWLINE=false
#POWERLEVEL9K_STATUS_HIDE_SIGNAME=false

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
ZSH_THEME_RANDOM_CANDIDATES=( 
    "minimal"
    #"imajes"
    #"sammy"
    #"fishy"
    #"dracula"
    #"macovsky"
    #"robbyrussell" 
    #"agnoster" 
)

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=7

# Uncomment the following line to disable colors in ls.
#DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  brew
  macos
  autojump
  sublime
  web-search
  extract
  zsh-autosuggestions
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


##################################################
## alias for common commands

# common ones
alias c='clear'
alias cdl='cd ..; ll'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias bc='bc -l'
alias sha1='openssl sha1'
alias mount='mount | column -t'
alias h='history'
alias jb='jobs -l'
alias ping='ping -c 5'
alias fastping='ping -c 100 -s.2'
alias ports='netstat -tulanp'
alias wget='wget -c'
alias path='echo -e ${PATH//:/\\n}'
alias now='date'
alias e='exit'
alias o='open'
alias od='open .'
alias atree="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g' "
alias k9='kill -9'
alias kl='kill -15'
alias size='du -sh'
alias gri='grep -i'
alias wg='wget'
alias mvall='mv `find . -name "*.mp4"`'
alias fb='filebrowser -r'
alias ep='electron-pdf'

alias wcclear='trash /Library/Containers/com.tencent.xinWeChat/Data/Library/Application\ Support/com.tencent.xinWeChat'

function sure()
{
    if [[ $0 -eq 'rm' ]];
    then
        echo -e "\033[34m==============================================================================\033[0m"
        echo -e "                  \033[31mAre you sure about using \"rm\" command?\033[0m"
        echo -e "   \033[31mIf you don't understand what you are doing, please use \"trash\" command!\033[0m"
        echo -e "\033[34m==============================================================================\033[0m"
    fi
}

#alias rm='foo(){ sure }; foo '

##################################################
## for C++

alias ccomplie='c++ -std=c++11 -stdlib=libc++'


##################################################
## for Swift

alias sf='swift'
alias sfc='swiftc'


##################################################
## for docker

alias dp='docker pull'
alias ubu='docker run -it ubuntu:latest bash'
alias vimplus='docker run -it chxuan/ubuntu-vimplus'

##################################################
## for python

alias ipy='ipython'
alias pi3='sudo pip3 install'
alias p3='/usr/bin/python3'
alias p2='python2'
#alias pu='pip3 install --upgrade pip'
alias pu='/usr/local/opt/python@3.9/bin/python3.9 -m pip install --upgrade pip'
alias pr='sudo -H pip3 install -r requirements.txt'
alias cs='pycodestyle'
alias pe='pipenv'
alias ve='virtualenv'
alias jn='jupyter notebook'
alias jl='jupyter-lab'
alias p2a='pyinstaller -F' # python 2 app
alias egg='python3 -m easy_install' # egg ***.egg
alias avir='virtualenv venv; source venv/bin/activate; pip3 install -r requirements.txt; jupyter notebook'
alias dvir='deactivate'

##################################################
## for third apps

# ffmpeg
alias ff='ffmpeg'
alias ffcut='ffmpeg -i $src_video_name -ss $where_to_start -t $how_long -acodec copy -vcodec copy $output_name' #example: ffmpeg -ss 00:03:25 -t 00:19:07 -i japan-2.mp4 -vcodec copy -acodec copy j-2.mp4 
alias ffcvt='ffmpeg -i $src_video_name $output_name' #example: ffmpeg -i japan.wmv japan-2.mp4 

# ytb
alias ytbd='pc4 youtube-dl'
alias ytd='youtube-dl -f best'
alias ydi='youtube-dl-interactive'

# pic
alias ic='imgcat'
alias face='face_recognition --cpus 4'

# music
alias mb='musicbox'
alias im='instantmusic'

alias cute='nyancat'
alias ql='qlmanage -p'
alias cs='codesign --force --deep --sign - /Applications/'
alias tz='terminalizer'
alias is='istats'
alias idg='idcardgenerator'
alias sl='streamlit'
alias br='broot'
alias drome='navidrome'
alias pi='sudo port install'
alias hf="pc4 hf"

##################################################
# enhenced cli command


# exa
# fd
# fzf
# fff
# nnn
# bat
# fx
# jq
# q
# duf
# ncdu
# htop
# xh
# curlie
# dog
#alias curl='httpie'
alias ps='procs'
alias cut='choose'
alias cr='mcfly'
alias diff='diff-so-fancy'
alias rg='ripgrep'
alias hx='hexyl'
alias br='broot'
alias z='zoxide'


##################################################
# Terminal Proxy Global

alias setpxy="export ALL_PROXY=socks5://127.0.0.1:7891"
alias unpxy="unset ALL_PROXY"

# test connection
alias setp="export http_proxy=http://127.0.0.1:7890; export https_proxy=$http_proxy; export all_proxy=socks5://127.0.0.1:7891; curl -I https://www.youtube.com --connect-timeout 3 --speed-time 2 --speed-limit 1"
alias unsetp="unset http_proxy; unset https_proxy; unset all_proxy;  curl -I https://www.youtube.com --connect-timeout 3 --speed-time 2 --speed-limit 1"

##################################################
# markdown on the terminal

alias glw='glow'

##################################################
# go alias

# go1.xx
alias gr='go run'
alias gbld='go build -v .'
alias report='sudo goreportcard'
alias bench='go test -bench=.'
alias gtd='go test .'
alias gtv='go test -v'
alias gtc='go test -c'
alias gout='go test -coverprofile=c.out .'
alias ghtml='go tool cover -html=c.out'
alias gocover='gout ; ghtml'
alias gtcov='go test -coverprofile=coverage.out'
alias ass='GOOS=linux GOARCH=amd64 go tool compile -S'
alias genass='go build -gcflags -S'
alias genssa='GOSSAFUNC=main go build main.go'

alias gopxy='go env -w GOPROXY=https://goproxy.cn,direct'
alias goon='go env -w GO111MODULE=on'

alias ggen='go build -gcflags=-G=3'

# process order: 
#   gnm ./main
#   gcmp ./main.go -> main.o 
#   gdmp main.o
#   gpf
#   gtr
alias gnm='go tool nm'
alias gcmp='go tool compile -N -l -S'
alias gdmp='go tool objdump'
alias gdmpf='go tool objdump -s'
alias gpf='go tool pprof'
alias gtr='go tool trace'
alias gtcf='go tool cover -func=coverage.out'
alias dlv='dlv exec'
alias dlva='dlv attach'
# dlv core ./example core.277282
alias dlvc='dlv core'

# go2 
# export GO2GO_DEST=$HOME/go2go/goroot
# export PATH="$GO2GO_DEST/bin:$PATH"
# export GO2ROOT="$GO2GO_DEST"
# export GO2PATH="$GO2GO_DEST/src/cmd/go2go/testdata/go2path"
# 
# alias g2t='go tool go2go test'
# alias ggo='go run -gcflags=-G=3'

##################################################
# cannot open app on catalina

alias reopen='sudo xattr -d com.apple.quarantine'
# cannot rm file: read-only system
alias remnt='sudo mount -uw /'

##################################################
# croc

alias send='croc send --code x230'
alias recv='croc x230'

##################################################
## for ios device
## https://www.tracenote.com/2017/08/16/appInstallRealDevice/

alias ii='ideviceinstaller'
alias iii='ideviceinstaller -i'
alias idev='idevice_id -l'
alias iu='ideviceinstaller -U'
alias ilog='idevicesyslog'
alias icut='idevicescreenshot'
alias idi='ideviceinfo'

##################################################
## alias for vim and tmux

alias v='vim'
alias vv='vim ~/.vimrc'
alias vz='vim ~/.zshrc'
alias vt='vim ~/.tmux.conf'

alias sv='source ~/.vimrc'
alias sz='source ~/.zshrc'
alias st='source ~/.tmux.conf'

alias v2v='vim -O2'
alias v3v='vim -O3'
alias v2h='vim -o2'
alias v3h='vim -o3'

tmux_init3h()
{
    tmux new-session -s "auto" -d -n "auto"
    tmux split-window -h
    tmux split-window -h
    tmux select-layout even-horizontal
    tmux select-pane -L
    tmux select-pane -L
    tmux -2 attach-session -d
}

tmux_init3v()
{
    tmux new-session -s "auto" -d -n "auto"
    tmux split-window -v
    tmux split-window -v
    tmux select-layout even-vertical
    tmux select-pane -L
    tmux select-pane -L
    tmux -2 attach-session -d
}

tmux_init2v()
{
    tmux new-session -s "auto" -d -n "auto"
    tmux split-window -v
    tmux select-layout even-vertical
    tmux -2 attach-session -d
}

tmux_init2h()
{
    tmux new-session -s "auto" -d -n "auto"
    tmux split-window -h
    tmux select-layout even-horizontal
    tmux -2 attach-session -d
}

alias t3h='tmux_init3h'
alias t2h='tmux_init2h'
alias t3v='tmux_init3v'
alias t2v='tmux_init2v'

##################################################
## for node

## nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm

alias vn='vim ~/.npmrc'
alias sn='source ~/.npmrc'
alias ni='npm install -g'
alias pni='pc4 npm install -g'

## npm global issue
NPM_PACKAGES="${HOME}/.npm-packages"
NODE_PATH="$NPM_PACKAGES/lib/node_modules:$NODE_PATH"
PATH="$NPM_PACKAGES/bin:$PATH"
export PATH="$(yarn global bin):$PATH"

##################################################
## proxy

proxy ()
{
    export http_proxy="http://127.0.0.1:8118";
    export no_proxy="localhost,127.0.0.0/0,192.168.0.0/16,10.0.0.0/0,kubernetes.docker.internal";
    export NO_PROXY=$no_proxy;
    export HTTP_PROXY=$http_proxy https_proxy=$http_proxy HTTPS_PROXY=$http_proxy NO_PROXY=$no_proxy;
    echo "HTTP Proxy on";
    env | grep --color=auto -i proxy
}

noproxy ()
{
    unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY no_proxy NO_PROXY FTP_PROXY ftp_proxy ALL_PROXY all_proxy;
    env | grep --color=auto -i proxy;
    echo -e "Proxy environment variable removed."
}

##################################################
## Simplize extract command

ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

##################################################
## Create folder then cd into it

function mkdircd(){
    mkdir -p "$@" && eval cd "\"\$$#\"";
}

alias mkcd='foo(){ mkdir -p "$1"; cd "$1" }; foo '

##################################################
## system

alias reboot='sudo reboot'
alias down='sudo shutdown -h now'
alias rmf='rm -rf'

##################################################
## git operation

alias vr='vim README.md'
alias cl='git clone'
alias ga='git add .'
alias gp='git pull'
alias gcm='git commit -m "Update README.md"'
alias co='git commit -m'
alias gcam='git commit -a -m'
alias gf='git fetch'
alias gl='git log --oneline'
alias glg='git lg'
alias gd='git diff'
alias gco='git checkout'
alias gb='git branch'
alias gs='git switch'
alias gss='git status -s'
alias gst='git stash'
alias gsp='git stash pop'
alias gm='git merge --no-ff'
alias gt='git tag -a'
alias gpo='git push origin'
alias gdev='git checkout develop'
alias gmain='git checkout main'
alias push='git push origin HEAD --force'
alias gdel='git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch $1' --prune-empty --tag-name-filter cat -- --all'
alias gqs='git-quick-stats'

# git commit checker
alias first='git-first'
alias next='git-next'
alias prev='git-prev'
alias last='git-last'

git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

##################################################
## ls enhanced

function delDS_Store()
{
    name='.DS_Store'
    if [ -f "$name" ]
    then
        rm $name
    fi
}

function lshow()
{
    dir='./.git'
    if [ -d "$dir" ]
    then
        echo -e "\033[34m==============================================================================\033[0m"
        echo "      \033[34mThis directory contains .git, please git pull first before ggpush.\033[0m"
        echo -e "\033[34m==============================================================================\033[0m"
        echo ""

        ls -alh
        delDS_Store
        
        echo ""
        echo -e "\033[34m==============================================================================\033[0m"
        echo "      \033[34mThis directory contains .git, please git pull first before ggpush.\033[0m"
        echo -e "\033[34m==============================================================================\033[0m"
    else
        ls -alh
        delDS_Store
    fi

}

alias ll='foo(){ lshow }; foo '
alias l='ls -lh'

##################################################
## echanced common commands

alias ec='exa -abghHli'
alias shk='shellcheck'
alias hs='httpstat'
alias hex='hexyl'

##################################################
## GitHub enter path

t1='/Volumes/1Tmac'
t2='/Volumes/2Tmac'

if [ -d $t1 ] 
then
    alias mine='cd $t1/github/mine'
    alias third='cd $t1/github/third'
    alias lc='$t1/github/mine/LeetCode/'
    alias 1t='$t1/'
fi

if [ -d $t2 ]
then
    alias mine='cd $t2/github/mine'
    alias third='cd $t2/github/third'
    alias lc='$t2/github/mine/LeetCode/'
    alias 2t='$t2/'
fi

##################################################
## adb

alias ai='adb install'
alias ffr='fastboot flash recovery'
alias ad='adb devices'
alias arr='adb reboot recovery'
alias arb='adb reboot bootloader'
alias fr='fastboot reboot'
alias asl='adb sideload'
alias ap='adb push'
alias pull='adb pull'
alias fd='fastboot --disable-verity --disable-verification flash vbmeta vbmeta.img'
alias fw='fastboot -w'
alias frf='fastboot reboot fastboot'
alias pro='fastboot getvar product'

##################################################
## brew

alias bi='brew install'
alias bun='brew uninstall'
alias buc='brew uninstall --cask'
alias bic='brew install --cask'
alias bcl='brew clean'
alias bu='brew update ; brew upgrade'
alias pbu='pc4 brew update ; pc4 brew upgrade'

##################################################
## proxychains4

alias pc4='proxychains4'
alias pbi='proxychains4 brew install'
alias pbu='proxychains4 brew uninstall'
alias pci='proxychains4 brew install --cask'
alias dl='proxychains4 wget'
alias pgc='proxychains4 git clone'

##################################################
## cargo for rust

alias ci='cargo install'
# rust cargo env
export PATH=$PATH:~/.cargo/bin/

##################################################
## Q# for quantum programing

alias act='conda activate'
alias aqs='conda activate qsharp-env'
alias dea='conda deactivate'
alias cdi='conda install -c conda-forge jupyterlab notebook voila'

##################################################
## web app

alias nf='nativefier --name'

##################################################
## iina for youtube

alias iina='/Applications/IINA.app/Contents/MacOS/iina-cli'

##################################################
## database

# no password, please enter directly
alias my='mysql.server start; mysql -p -u root ; mysql.server stop'
alias mystart='mysql.server start'
alias mystop='mysql.server stop'

##################################################
## weather

alias weather='curl wttr.in'

##################################################
## autojump

alias j='autojump'
[[ -s $HOME/.autojump/etc/profile.d/autojump.sh ]] && source $HOME/.autojump/etc/profile.d/autojump.sh

##################################################
# mac softwareupdate

alias macupdate='softwareupdate --all --install --force'

##################################################
## fzf

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

##################################################
## bash completion

[[ -r "/usr/local/etc/profile.d/bash_completion.sh" ]] && . "/usr/local/etc/profile.d/bash_completion.sh"

##################################################
## for java

export PATH="/usr/local/opt/openjdk/bin:$PATH"
export CPPFLAGS="-I/usr/local/opt/openjdk/include"

##################################################
## homebrew china

alias rehb='/bin/zsh -c "$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)"'
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"

##################################################

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('$HOME/opt/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/opt/miniconda3/etc/profile.d/conda.sh" ]; then
        . "$HOME/opt/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/opt/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

##################################################

# JINA_CLI_BEGIN

## autocomplete
if [[ ! -o interactive ]]; then
    return
fi

compctl -K _jina jina

_jina() {
  local words completions
  read -cA words

  if [ "${#words}" -eq 2 ]; then
    completions="$(jina commands)"
  else
    completions="$(jina completions ${words[2,-2]})"
  fi

  reply=(${(ps:\n:)completions})
}

# session-wise fix
ulimit -n 4096
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

# JINA_CLI_END

##################################################

autoload -U +X bashcompinit && bashcompinit
complete -o nospace -C /usr/local/bin/terraform terraform


#### FIG ENV VARIABLES ####
[ -s ~/.fig/fig.sh ] && source ~/.fig/fig.sh
#### END FIG ENV VARIABLES ####


##################################################
# instal cython for macos

export PATH="/usr/local/opt/cython/bin:$PATH"

##################################################

# The next line updates PATH for the Google Cloud SDK.
if [ -f '$HOME/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '$HOME/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '$HOME/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '$HOME/Downloads/google-cloud-sdk/completion.zsh.inc'; fi
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

#################################################
#source ~/powerlevel10k/powerlevel10k.zsh-theme


## pyenv
alias brew='env PATH="${PATH//$(pyenv root)\/shims:/}" brew'
eval "$(pyenv init -)"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

## mysql5.7
export PATH="${PATH}:/usr/local/Cellar/mysql@5.7/5.7.37/bin"

## start and stop services
alias bstart='brew services start'
alias bstop='brew services stop'
alias brestart='brew services restart'
